2. Реализация:
  . Интерфейс с кешированием. Методы:
    . put(obj: Object): void
    . get(hashcode: Object): Object
  . Два класса с реализацией этого интерфейса.
  . У реализаций package-private конструкторы.

3. Сериализация и десериализация
  . In-Memory:
    . HashMap из obj.hashcode -> obj

  . Filesystem:
    . Сохранять каждый объект в отдельный файл, имя файла=hashcode()
    . Сериализация рефлекшном
      . Типизация:
        . в кавычках: String
        . == true или false: boolean
        . не в кавычках и имеет точку: double
        . не в кавычках и без точки: int
        . Вложенности пропускаются?
      . Сохранять в формате csv, файл без расширения. Разделение табами.
      . Формат: название_поля=значение

4. Управление местом
  . In-Memory:
    . Использовать java.lang.Instrumentation
  . Filesystem:
    . Использовать file.length()
  . В конфигах можно указывать размер в килобайтах, мегабайтах и тд. (Kb, Mb, Gb, ...). Написать функцию для перевода
    этого в байты.

5. Выбрасывать exception на уровне интерфейса во время IO исключений и нехватки места.